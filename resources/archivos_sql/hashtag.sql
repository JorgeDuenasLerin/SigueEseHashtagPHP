/*
  BASE DE DATOS DE SigueEseHastag
*/


USE hashtag;
/* SET FOREIGN_KEY_CHECKS=0;   si es que se agregan las tablas mas de una vez */
SET FOREIGN_KEY_CHECKS=0;



DROP TABLE IF EXISTS USUARIO;
DROP TABLE IF EXISTS HASHTAG;
DROP TABLE IF EXISTS PUBLICACION;
DROP TABLE IF EXISTS HASHPUB;
DROP TABLE IF EXISTS TOKEN;


CREATE TABLE USUARIO (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NOMBRE       VARCHAR(20) NOT NULL,
  CONTRASEÃ‘A   VARCHAR(100) NOT NULL,
  EMAIL VARCHAR(100) NOT NULL

);



CREATE TABLE HASHTAG (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NOMBRE      VARCHAR(200)  NOT NULL,
  ID_USUARIO INT,
  FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID) ON DELETE CASCADE

);

CREATE TABLE PUBLICACION (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NOMBRE      VARCHAR(200)  NOT NULL,
  CONTENIDO  VARCHAR(200) NOT NULL ,
  IMAGEN    VARCHAR(200) ,
  FECHA  TIMESTAMP NOT NULL,
  APLICACION VARCHAR(20)
);

CREATE TABLE HASHPUB(
  ID INT NOT NULL AUTO_INCREMENT,
  ID_HASHTAG INT NOT NULL ,
  ID_PUBLICACION INT NOT NULL ,
  FOREIGN KEY (ID_HASHTAG) REFERENCES HASHTAG(ID) ON DELETE CASCADE,
  FOREIGN KEY (ID_PUBLICACION) REFERENCES PUBLICACION(ID) ON DELETE CASCADE,
  CONSTRAINT PRIMARY KEY (ID,ID_HASHTAG,ID_PUBLICACION)
);

/*
CREATE TABLE HASPUB(
  ID_HASPUB INT NOT NULL ,
  ID_PUBLICACION INT NOT NULL ,
  FOREIGN KEY (ID_HASTAG) REFERENCES HASTAG(ID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (ID_PUBLICACION) REFERENCES PUBLICACION(ID) ON DELETE CASCADE ON UPDATE CASCADE,
  PRIMARY KEY (ID_HASPUB)
);

*/


CREATE TABLE TOKEN (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  EMAIL VARCHAR(200) NOT NULL,
  TOKEN VARCHAR(200) NOT NULL,
  ID_USUARIO INT NOT NULL ,
  FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID) ON DELETE CASCADE

);
